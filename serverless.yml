service: lambda-mongdob-s3-backup 

custom: 
  stage: "${opt:stage, self:provider.stage}" # this way we always have a stage

provider:
  stage: production
  name: aws
  runtime: nodejs6.10
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - ssm:GetParametersByPath
        - ssm:GetParameters
        - ssm:GetParameter
      Resource: arn:aws:ssm:*:*:parameter/chartroom/api/production/core*
    - Effect: "Allow"
      Action:
        - ssm:GetParametersByPath
        - ssm:GetParameters
        - ssm:GetParameter
      Resource: arn:aws:ssm:*:*:parameter/lambda-mongodb-s3-backup*
    -  Effect: "Allow"
       Action:
         - "s3:ListBucket"
       Resource:
         Fn::Join:
           - ""
           - - "arn:aws:s3:::"
             - Ref: MongoBackupBucket
    -  Effect: "Allow"
       Action:
         - "s3:PutObject"
       Resource:
         Fn::Join:
           - ""
           - - "arn:aws:s3:::"
             - Ref: MongoBackupBucket
             - "/*"
package:
 include:
   - functions/handler/**

functions:
  backup:
    handler: index.handler
    events:
     - schedule: rate(1 day)

resources:
 Resources:
   MongoBackupBucket:
     Type: AWS::S3::Bucket
     Properties:
       BucketName: com.hbkapps.chartroom.production.mongo-backups